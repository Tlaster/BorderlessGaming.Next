<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net6.0-windows10.0.19041.0</TargetFramework>
        <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
        <RootNamespace>BorderlessGaming.Next</RootNamespace>
        <ApplicationManifest>app.manifest</ApplicationManifest>
        <Platforms>x86;x64;arm64</Platforms>
        <RuntimeIdentifiers>win10-x86;win10-x64;win10-arm64</RuntimeIdentifiers>
        <PublishProfile>win10-$(Platform).pubxml</PublishProfile>
        <UseWinUI>true</UseWinUI>
        <EnableMsixTooling>true</EnableMsixTooling>
        <WindowsPackageType>None</WindowsPackageType>
        <LangVersion>latest</LangVersion>
        <Nullable>enable</Nullable>
        <ApplicationIcon>Assets\BorderlessGaming_new.ico</ApplicationIcon>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    <ItemGroup>
        <None Remove="UI\Scene\ProcessScene.xaml" />
        <None Remove="UI\Scene\Settings\SettingsScene.xaml" />
    </ItemGroup>

    <ItemGroup>
        <Content Include="Assets\SplashScreen.scale-200.png" />
        <Content Include="Assets\LockScreenLogo.scale-200.png" />
        <Content Include="Assets\Square150x150Logo.scale-200.png" />
        <Content Include="Assets\Square44x44Logo.scale-200.png" />
        <Content Include="Assets\Square44x44Logo.targetsize-24_altform-unplated.png" />
        <Content Include="Assets\StoreLogo.png" />
        <Content Include="Assets\Wide310x150Logo.scale-200.png" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="CommunityToolkit.WinUI.UI.Controls" Version="7.1.2" />
        <PackageReference Include="Microsoft.Windows.CsWin32" Version="0.2.63-beta">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Windows.SDK.Win32Metadata" Version="34.0.8-preview" />
        <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.1.5" />
        <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.22621.1" />
        <PackageReference Include="CommunityToolkit.Mvvm" Version="8.0.0" />
        <Manifest Include="$(ApplicationManifest)" />
        <PackageReference Include="System.Drawing.Common" Version="6.0.0" />
        <PackageReference Include="WinUIEx" Version="1.8.0" />
        <FrameworkReference Include="Microsoft.WindowsDesktop.App.WindowsForms" />
        <!--        <PackageReference Include="PInvoke.User32" Version="0.7.124" />-->
    </ItemGroup>

    <!-- 
      Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
      Tools extension to be activated for this project even if the Windows App SDK Nuget
      package has not yet been restored.
    -->
    <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
        <ProjectCapability Include="Msix" />
    </ItemGroup>
    <ItemGroup>
        <Folder Include="Themes\" />
        <Folder Include="UI\Widget" />
    </ItemGroup>
    <ItemGroup>
      <Page Update="UI\Scene\Settings\SettingsScene.xaml">
        <Generator>MSBuild:Compile</Generator>
      </Page>
    </ItemGroup>
    <ItemGroup>
      <Page Update="UI\Scene\Home\ProcessScene.xaml">
        <SubType>Designer</SubType>
      </Page>
    </ItemGroup>

    <!-- 
      Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution 
      Explorer "Package and Publish" context menu entry to be enabled for this project even if 
      the Windows App SDK Nuget package has not yet been restored.
    -->
    <PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
        <HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
    </PropertyGroup>
</Project>
